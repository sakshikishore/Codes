class Solution {
    public boolean checkMove(char[][] board, int rMove, int cMove, char color) {
      board[rMove][cMove]=color;
        int i=rMove-1,j=cMove-1;
        int count=1;
        while(i>=0 && j>=0)
        {
            if(board[i][j]=='.')
            {
                break;
            }
            if(board[i][j]!=color)
            {
                count++;
            }
            else
            {
                if(count>=2)
                {
                    return true;
                }
                else
                {
                break;
                }
            }
            i--;
            j--;
        }
        count=1;
        i=rMove-1;
        j=cMove+1;
        while(i>=0 && j<8)
        {
            if(board[i][j]=='.')
            {
                break;
            }
             if(board[i][j]!=color)
            {
                count++;
            }
            else
            {
                if(count>=2)
                {
                    return true;
                }
                else
                {
                break;
                }
            }
            i--;
            j++;
        }
        count=1;
        i=rMove+1;
        j=cMove+1;
        while(i<8 && j<8)
        {
            if(board[i][j]=='.')
            {
                break;
            }
             if(board[i][j]!=color)
            {
                count++;
            }
            else
            {
                if(count>=2)
                {
                    return true;
                }
                else
                {
                break;
                }
            }
            i++;
            j++;
        }
        count=1;
        i=rMove+1;
        j=cMove-1;
        while(i<8 && j>=0)
        {
            if(board[i][j]=='.')
            {
                break;
            }
             if(board[i][j]!=color)
            {
                count++;
            }
            else
            {
                if(count>=2)
                {
                    return true;
                }
                else
                {
                break;
                }
            }
            i++;
            j--;
        }
        count=1;
        i=rMove;
        j=cMove+1;
        while(j<8)
        {
            if(board[i][j]=='.')
            {
                break;
            }
             if(board[i][j]!=color)
            {
                count++;
            }
            else
            {
                if(count>=2)
                {
                    return true;
                }
                else
                {
                break;
                }
            }
            j++;
        }
        count=1;
        i=rMove;
        j=cMove-1;
        while(j>=0)
        {
            if(board[i][j]=='.')
            {
                break;
            }
              if(board[i][j]!=color)
            {
                count++;
            }
            else
            {
                if(count>=2)
                {
                    return true;
                }
                else
                {
                break;
                }
            }
            j--;
        }
         count=1;
        i=rMove-1;
        j=cMove;
        while(i>=0)
        {
            if(board[i][j]=='.')
            {
                break;
            }
             if(board[i][j]!=color)
            {
                count++;
            }
            else
            {
                if(count>=2)
                {
                    return true;
                }
                else
                {
                break;
                }
            }
            i--;
        }
         count=1;
        i=rMove+1;
        j=cMove;
        while(i<8)
        {
            if(board[i][j]=='.')
            {
                break;
            }
             if(board[i][j]!=color)
            {
                count++;
            }
            else
            {
                if(count>=2)
                {
                    return true;
                }
                else
                {
                break;
                }
            }
            i++;
        }

    return false;

    }
}
