class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        int result=graph.length;
        int min=graph.length;
    for(int i=0;i<initial.length;i++)
    {
        Queue<Integer> q=new LinkedList<Integer>();
        HashSet<Integer> hset=new HashSet<Integer>();
        for(int j=0;j<initial.length;j++)
        {
            if(j==i)
            {
                continue;
            }
           q.add(initial[j]);
           hset.add(initial[j]);
        }
         int count=0;
        while(q.size()>0)
        {
            int x=q.poll();
            count++;
           for(int k=0;k<graph[0].length;k++)
           {
              if(graph[x][k]==1 && !hset.contains(k))
              {
                q.add(k);
                hset.add(k);
              }
           }

        }
         if(count==min)
           {
            result=Math.min(result,initial[i]);
            min=count;
           }
           else if(count<min)
           {
            result=initial[i];
            min=count;
           }
    }
    return result;
}
}
