public class Node {
    long totalVal, temp; // temp will hold total non absent value

    public Node(long p, long t) {
        totalVal = p;
        temp = t;
    }
}

class Solution {
    public int checkRecord(int n) {
        if (n == 1) {
            return 3;
        }
        Node p = new Node(1l, 1l);
        Node a = new Node(1l, 0);
        Node l[][] = new Node[n][2];
        l[0][0] = new Node(1l, 1l);
        l[0][1] = new Node(0, 0);
        long result = 0;

        for (int i = 1; i < n; i++) {
            long x = p.totalVal + l[i - 1][0].totalVal + l[i - 1][1].totalVal + a.totalVal;
            long r = p.temp + l[i - 1][0].temp + l[i - 1][1].temp;
            r = r % (1000000007);
            long y = p.totalVal + a.totalVal;
            y = y % (1000000007);
            l[i][0] = new Node(y, p.temp);
            l[i][1] = new Node(l[i - 1][0].totalVal, l[i - 1][0].temp);
            x = x % (1000000007);
            long t = p.temp+l[i - 1][0].temp+l[i - 1][1].temp;
            t = t % (1000000007);
            a = new Node(t, 0);
            p = new Node(x, r);
        }
        result = result + p.totalVal + a.totalVal + l[l.length - 1][0].totalVal + l[l.length - 1][1].totalVal;
        result = result % (1000000007);
        return (int) result;
    }
}
